// <auto-generated />
using System;
using Isotop2.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Isotop2.Migrations
{
    [DbContext(typeof(DataDBContext))]
    [Migration("20250723045637_init5")]
    partial class init5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Isotop2.Data.Entities.CoefficientsForChildren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgeRange")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Coefficient")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CoefficientsForChildrens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRange = "13-17",
                            Coefficient = 0.5
                        },
                        new
                        {
                            Id = 2,
                            AgeRange = "8-12",
                            Coefficient = 0.40000000000000002
                        },
                        new
                        {
                            Id = 3,
                            AgeRange = "3-7",
                            Coefficient = 0.29999999999999999
                        },
                        new
                        {
                            Id = 4,
                            AgeRange = "1-2",
                            Coefficient = 0.10000000000000001
                        },
                        new
                        {
                            Id = 5,
                            AgeRange = "<1",
                            Coefficient = 0.029999999999999999
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Iodine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Day")
                        .HasColumnType("REAL");

                    b.Property<double>("DecayPrecent")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Iodine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = 0.0,
                            DecayPrecent = 100.0
                        },
                        new
                        {
                            Id = 2,
                            Day = 1.0,
                            DecayPrecent = 91.799999999999997
                        },
                        new
                        {
                            Id = 3,
                            Day = 2.0,
                            DecayPrecent = 84.299999999999997
                        },
                        new
                        {
                            Id = 4,
                            Day = 3.0,
                            DecayPrecent = 77.400000000000006
                        },
                        new
                        {
                            Id = 5,
                            Day = 4.0,
                            DecayPrecent = 71.0
                        },
                        new
                        {
                            Id = 6,
                            Day = 5.0,
                            DecayPrecent = 65.200000000000003
                        },
                        new
                        {
                            Id = 7,
                            Day = 6.0,
                            DecayPrecent = 59.899999999999999
                        },
                        new
                        {
                            Id = 8,
                            Day = 7.0,
                            DecayPrecent = 54.899999999999999
                        },
                        new
                        {
                            Id = 9,
                            Day = 8.0,
                            DecayPrecent = 50.700000000000003
                        },
                        new
                        {
                            Id = 10,
                            Day = 9.0,
                            DecayPrecent = 46.299999999999997
                        },
                        new
                        {
                            Id = 11,
                            Day = 10.0,
                            DecayPrecent = 42.5
                        },
                        new
                        {
                            Id = 12,
                            Day = 11.0,
                            DecayPrecent = 39.0
                        },
                        new
                        {
                            Id = 13,
                            Day = 12.0,
                            DecayPrecent = 35.799999999999997
                        },
                        new
                        {
                            Id = 14,
                            Day = 13.0,
                            DecayPrecent = 32.899999999999999
                        },
                        new
                        {
                            Id = 15,
                            Day = 14.0,
                            DecayPrecent = 30.199999999999999
                        },
                        new
                        {
                            Id = 16,
                            Day = 15.0,
                            DecayPrecent = 27.199999999999999
                        },
                        new
                        {
                            Id = 17,
                            Day = 16.0,
                            DecayPrecent = 25.399999999999999
                        },
                        new
                        {
                            Id = 18,
                            Day = 17.0,
                            DecayPrecent = 23.399999999999999
                        },
                        new
                        {
                            Id = 19,
                            Day = 18.0,
                            DecayPrecent = 21.399999999999999
                        },
                        new
                        {
                            Id = 20,
                            Day = 19.0,
                            DecayPrecent = 19.699999999999999
                        },
                        new
                        {
                            Id = 21,
                            Day = 20.0,
                            DecayPrecent = 18.100000000000001
                        },
                        new
                        {
                            Id = 22,
                            Day = 21.0,
                            DecayPrecent = 16.600000000000001
                        },
                        new
                        {
                            Id = 23,
                            Day = 22.0,
                            DecayPrecent = 15.199999999999999
                        },
                        new
                        {
                            Id = 24,
                            Day = 23.0,
                            DecayPrecent = 14.0
                        },
                        new
                        {
                            Id = 25,
                            Day = 24.0,
                            DecayPrecent = 12.800000000000001
                        },
                        new
                        {
                            Id = 26,
                            Day = 25.0,
                            DecayPrecent = 11.800000000000001
                        },
                        new
                        {
                            Id = 27,
                            Day = 26.0,
                            DecayPrecent = 10.800000000000001
                        },
                        new
                        {
                            Id = 28,
                            Day = 27.0,
                            DecayPrecent = 9.6999999999999993
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            ManufacturerName = "ФГАОУ ВО УФУ"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            ManufacturerName = "АО НИФХИИ"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Marker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MarkerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxActivity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinActivity")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NewGenerator")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Markers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MarkerName = "Резоскан",
                            MaxActivity = 600,
                            MinActivity = 400,
                            NewGenerator = true
                        },
                        new
                        {
                            Id = 2,
                            MarkerName = "Нанотоп",
                            MaxActivity = 170,
                            MinActivity = 120,
                            NewGenerator = true
                        },
                        new
                        {
                            Id = 3,
                            MarkerName = "Пентатех",
                            MaxActivity = 370,
                            MinActivity = 110,
                            NewGenerator = false
                        },
                        new
                        {
                            Id = 4,
                            MarkerName = "Технефит",
                            MaxActivity = 300,
                            MinActivity = 120,
                            NewGenerator = false
                        },
                        new
                        {
                            Id = 5,
                            MarkerName = "Технемек",
                            MaxActivity = 150,
                            MinActivity = 100,
                            NewGenerator = false
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Molybdenum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<double>("DecayPrecent")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Molybdenum");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = 0,
                            DecayPrecent = 100.0
                        },
                        new
                        {
                            Id = 2,
                            Day = 1,
                            DecayPrecent = 77.329999999999998
                        },
                        new
                        {
                            Id = 3,
                            Day = 2,
                            DecayPrecent = 60.409999999999997
                        },
                        new
                        {
                            Id = 4,
                            Day = 3,
                            DecayPrecent = 46.960000000000001
                        },
                        new
                        {
                            Id = 5,
                            Day = 4,
                            DecayPrecent = 36.5
                        },
                        new
                        {
                            Id = 6,
                            Day = 5,
                            DecayPrecent = 28.370000000000001
                        },
                        new
                        {
                            Id = 7,
                            Day = 6,
                            DecayPrecent = 22.050000000000001
                        },
                        new
                        {
                            Id = 8,
                            Day = 7,
                            DecayPrecent = 17.140000000000001
                        },
                        new
                        {
                            Id = 9,
                            Day = 8,
                            DecayPrecent = 13.32
                        },
                        new
                        {
                            Id = 10,
                            Day = 9,
                            DecayPrecent = 10.35
                        },
                        new
                        {
                            Id = 11,
                            Day = 10,
                            DecayPrecent = 8.0500000000000007
                        },
                        new
                        {
                            Id = 12,
                            Day = 11,
                            DecayPrecent = 6.2599999999999998
                        },
                        new
                        {
                            Id = 13,
                            Day = 12,
                            DecayPrecent = 4.8600000000000003
                        },
                        new
                        {
                            Id = 14,
                            Day = 13,
                            DecayPrecent = 3.7799999999999998
                        },
                        new
                        {
                            Id = 15,
                            Day = 14,
                            DecayPrecent = 2.9399999999999999
                        },
                        new
                        {
                            Id = 16,
                            Day = 15,
                            DecayPrecent = 2.2799999999999998
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Organ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrganName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrganName = "Желудок"
                        },
                        new
                        {
                            Id = 2,
                            OrganName = "Лёгкие"
                        },
                        new
                        {
                            Id = 3,
                            OrganName = "Красный костный мозг"
                        },
                        new
                        {
                            Id = 4,
                            OrganName = "Яичники"
                        },
                        new
                        {
                            Id = 5,
                            OrganName = "Семенники"
                        },
                        new
                        {
                            Id = 6,
                            OrganName = "Верхний отдел толстой кишки"
                        },
                        new
                        {
                            Id = 7,
                            OrganName = "Нижний отдел толстой кишки"
                        },
                        new
                        {
                            Id = 8,
                            OrganName = "Мочевой пузырь"
                        },
                        new
                        {
                            Id = 9,
                            OrganName = "Кости"
                        },
                        new
                        {
                            Id = 10,
                            OrganName = "Кожа"
                        },
                        new
                        {
                            Id = 11,
                            OrganName = "Тонка кишка"
                        },
                        new
                        {
                            Id = 12,
                            OrganName = "Почки"
                        },
                        new
                        {
                            Id = 13,
                            OrganName = "Скелетные мышцы"
                        },
                        new
                        {
                            Id = 14,
                            OrganName = "Поджелудочная железа"
                        },
                        new
                        {
                            Id = 15,
                            OrganName = "Селезёнка"
                        },
                        new
                        {
                            Id = 16,
                            OrganName = "Всё тело"
                        },
                        new
                        {
                            Id = 17,
                            OrganName = "Сердце"
                        },
                        new
                        {
                            Id = 18,
                            OrganName = "Надпочечники"
                        },
                        new
                        {
                            Id = 19,
                            OrganName = "Головной мозг"
                        },
                        new
                        {
                            Id = 20,
                            OrganName = "Желчный пузырь"
                        },
                        new
                        {
                            Id = 21,
                            OrganName = "Вилочковая железа"
                        },
                        new
                        {
                            Id = 22,
                            OrganName = "Матка"
                        },
                        new
                        {
                            Id = 23,
                            OrganName = "Печень"
                        },
                        new
                        {
                            Id = 24,
                            OrganName = "Щитовидная железа"
                        },
                        new
                        {
                            Id = 25,
                            OrganName = "Молочные железы"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PackageId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            PackageId = 1,
                            PackageName = "ГТ-4К"
                        },
                        new
                        {
                            PackageId = 2,
                            PackageName = "КТ-1-10"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.RI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccompanyingDocument")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Activity")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GeneratorNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PackageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RadionuclideCompoundId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RadionuclideId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Sent")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StoragePointId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("PackageId");

                    b.HasIndex("RadionuclideCompoundId");

                    b.HasIndex("RadionuclideId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("StoragePointId");

                    b.HasIndex("SupplierId");

                    b.ToTable("RIs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccompanyingDocument = "Т-Т Накладная",
                            Activity = 19000.0,
                            CreateDate = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneratorNumber = "4554",
                            ManufacturerId = 1,
                            Operation = "В/В Введение",
                            OperationDate = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PackageId = 1,
                            PassportNumber = "904",
                            RadionuclideCompoundId = 1,
                            RadionuclideId = 1,
                            RecipientId = 1,
                            Sent = true,
                            StoragePointId = 3,
                            SupplierId = 1,
                            Volume = 200.0,
                            Weight = 15.0
                        },
                        new
                        {
                            Id = 2,
                            AccompanyingDocument = "Т-Т Накладная",
                            Activity = 200.0,
                            CreateDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturerId = 1,
                            Operation = "PerOs",
                            OperationDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PackageId = 2,
                            PassportNumber = "03186",
                            RadionuclideCompoundId = 2,
                            RadionuclideId = 2,
                            RecipientId = 1,
                            Sent = false,
                            StoragePointId = 1,
                            SupplierId = 2,
                            Volume = 6.0,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = 3,
                            AccompanyingDocument = "Т-Т Накладная",
                            Activity = 10.199999999999999,
                            CreateDate = new DateTime(2025, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturerId = 1,
                            Operation = "В/В Введение",
                            OperationDate = new DateTime(2025, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PackageId = 2,
                            PassportNumber = "210225-1/59",
                            RadionuclideCompoundId = 3,
                            RadionuclideId = 3,
                            RecipientId = 1,
                            Sent = false,
                            StoragePointId = 1,
                            SupplierId = 1,
                            Volume = 6.5999999999999996,
                            Weight = 2.0
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.RadiationExposureToOrgan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Coefficient")
                        .HasColumnType("REAL");

                    b.Property<int>("MarkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkerId");

                    b.HasIndex("OrganId");

                    b.ToTable("RadiationExposureToOrgans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 0.0070000000000000001,
                            MarkerId = 1,
                            OrganId = 9
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 0.0040000000000000001,
                            MarkerId = 1,
                            OrganId = 4
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 0.0050000000000000001,
                            MarkerId = 1,
                            OrganId = 5
                        },
                        new
                        {
                            Id = 4,
                            Coefficient = 0.0025000000000000001,
                            MarkerId = 1,
                            OrganId = 16
                        },
                        new
                        {
                            Id = 5,
                            Coefficient = 0.01,
                            MarkerId = 2,
                            OrganId = 24
                        },
                        new
                        {
                            Id = 6,
                            Coefficient = 0.0050000000000000001,
                            MarkerId = 2,
                            OrganId = 3
                        },
                        new
                        {
                            Id = 7,
                            Coefficient = 0.0060000000000000001,
                            MarkerId = 2,
                            OrganId = 9
                        },
                        new
                        {
                            Id = 8,
                            Coefficient = 0.0030000000000000001,
                            MarkerId = 2,
                            OrganId = 5
                        },
                        new
                        {
                            Id = 9,
                            Coefficient = 0.017999999999999999,
                            MarkerId = 2,
                            OrganId = 4
                        },
                        new
                        {
                            Id = 10,
                            Coefficient = 0.0089999999999999993,
                            MarkerId = 2,
                            OrganId = 16
                        },
                        new
                        {
                            Id = 11,
                            Coefficient = 0.01,
                            MarkerId = 3,
                            OrganId = 12
                        },
                        new
                        {
                            Id = 12,
                            Coefficient = 0.002,
                            MarkerId = 3,
                            OrganId = 3
                        },
                        new
                        {
                            Id = 13,
                            Coefficient = 0.0060000000000000001,
                            MarkerId = 3,
                            OrganId = 4
                        },
                        new
                        {
                            Id = 14,
                            Coefficient = 0.0030000000000000001,
                            MarkerId = 3,
                            OrganId = 5
                        },
                        new
                        {
                            Id = 15,
                            Coefficient = 0.002,
                            MarkerId = 3,
                            OrganId = 16
                        },
                        new
                        {
                            Id = 16,
                            Coefficient = 0.059999999999999998,
                            MarkerId = 3,
                            OrganId = 8
                        },
                        new
                        {
                            Id = 17,
                            Coefficient = 0.0040000000000000001,
                            MarkerId = 4,
                            OrganId = 16
                        },
                        new
                        {
                            Id = 18,
                            Coefficient = 0.080000000000000002,
                            MarkerId = 4,
                            OrganId = 23
                        },
                        new
                        {
                            Id = 19,
                            Coefficient = 0.040000000000000001,
                            MarkerId = 4,
                            OrganId = 15
                        },
                        new
                        {
                            Id = 20,
                            Coefficient = 0.014999999999999999,
                            MarkerId = 4,
                            OrganId = 3
                        },
                        new
                        {
                            Id = 21,
                            Coefficient = 0.0050000000000000001,
                            MarkerId = 5,
                            OrganId = 16
                        },
                        new
                        {
                            Id = 22,
                            Coefficient = 0.0018,
                            MarkerId = 5,
                            OrganId = 5
                        },
                        new
                        {
                            Id = 23,
                            Coefficient = 0.0033999999999999998,
                            MarkerId = 5,
                            OrganId = 4
                        },
                        new
                        {
                            Id = 34,
                            Coefficient = 0.23000000000000001,
                            MarkerId = 5,
                            OrganId = 12
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Radionuclide", b =>
                {
                    b.Property<int>("RadionuclideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RadionuclideName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RadionuclideId");

                    b.ToTable("Radionuclides");

                    b.HasData(
                        new
                        {
                            RadionuclideId = 1,
                            RadionuclideName = "Технеций-99m"
                        },
                        new
                        {
                            RadionuclideId = 2,
                            RadionuclideName = "Йод-131"
                        },
                        new
                        {
                            RadionuclideId = 3,
                            RadionuclideName = "Радий-223"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.RadionuclideCompound", b =>
                {
                    b.Property<int>("RadionuclideCompoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Compound")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RadionuclideCompoundId");

                    b.ToTable("RadionuclideCompound");

                    b.HasData(
                        new
                        {
                            RadionuclideCompoundId = 1,
                            Compound = "Пертехнет Натрия"
                        },
                        new
                        {
                            RadionuclideCompoundId = 2,
                            Compound = "Натрий Йодит"
                        },
                        new
                        {
                            RadionuclideCompoundId = 3,
                            Compound = "Радия Хлорид"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Radium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<double>("DecayCoefficent")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Radium");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = 0,
                            DecayCoefficent = 1.54
                        },
                        new
                        {
                            Id = 2,
                            Day = 1,
                            DecayCoefficent = 1.45
                        },
                        new
                        {
                            Id = 3,
                            Day = 2,
                            DecayCoefficent = 1.3600000000000001
                        },
                        new
                        {
                            Id = 4,
                            Day = 3,
                            DecayCoefficent = 1.28
                        },
                        new
                        {
                            Id = 5,
                            Day = 4,
                            DecayCoefficent = 1.21
                        },
                        new
                        {
                            Id = 6,
                            Day = 5,
                            DecayCoefficent = 1.1399999999999999
                        },
                        new
                        {
                            Id = 7,
                            Day = 6,
                            DecayCoefficent = 1.0700000000000001
                        },
                        new
                        {
                            Id = 8,
                            Day = 7,
                            DecayCoefficent = 1.01
                        },
                        new
                        {
                            Id = 9,
                            Day = 8,
                            DecayCoefficent = 0.94999999999999996
                        },
                        new
                        {
                            Id = 10,
                            Day = 9,
                            DecayCoefficent = 0.89000000000000001
                        },
                        new
                        {
                            Id = 11,
                            Day = 10,
                            DecayCoefficent = 0.83999999999999997
                        },
                        new
                        {
                            Id = 12,
                            Day = 11,
                            DecayCoefficent = 0.79000000000000004
                        },
                        new
                        {
                            Id = 13,
                            Day = 12,
                            DecayCoefficent = 0.73999999999999999
                        },
                        new
                        {
                            Id = 14,
                            Day = 13,
                            DecayCoefficent = 0.69999999999999996
                        },
                        new
                        {
                            Id = 15,
                            Day = 14,
                            DecayCoefficent = 0.66000000000000003
                        },
                        new
                        {
                            Id = 16,
                            Day = 15,
                            DecayCoefficent = 0.62
                        },
                        new
                        {
                            Id = 17,
                            Day = 16,
                            DecayCoefficent = 0.57999999999999996
                        },
                        new
                        {
                            Id = 18,
                            Day = 17,
                            DecayCoefficent = 0.55000000000000004
                        },
                        new
                        {
                            Id = 19,
                            Day = 18,
                            DecayCoefficent = 0.52000000000000002
                        },
                        new
                        {
                            Id = 20,
                            Day = 19,
                            DecayCoefficent = 0.48999999999999999
                        },
                        new
                        {
                            Id = 21,
                            Day = 20,
                            DecayCoefficent = 0.46000000000000002
                        },
                        new
                        {
                            Id = 22,
                            Day = 21,
                            DecayCoefficent = 0.42999999999999999
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Recipient", b =>
                {
                    b.Property<int>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecipientId");

                    b.ToTable("Recipients");

                    b.HasData(
                        new
                        {
                            RecipientId = 1,
                            RecipientName = "ГУЗ КОД"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.StoragePoint", b =>
                {
                    b.Property<int>("StoragePointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoragePointName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StoragePointId");

                    b.ToTable("StoragePoints");

                    b.HasData(
                        new
                        {
                            StoragePointId = 1,
                            StoragePointName = "Сейф"
                        },
                        new
                        {
                            StoragePointId = 2,
                            StoragePointName = "Хранилище"
                        },
                        new
                        {
                            StoragePointId = 3,
                            StoragePointName = "Генераторная"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            SupplierName = "ООО Фарматом"
                        },
                        new
                        {
                            SupplierId = 2,
                            SupplierName = "ООО Цистех"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Technetium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("DecayPrecent")
                        .HasColumnType("REAL");

                    b.Property<double>("Hour")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Technetium");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DecayPrecent = 100.0,
                            Hour = 0.0
                        },
                        new
                        {
                            Id = 2,
                            DecayPrecent = 94.390000000000001,
                            Hour = 0.5
                        },
                        new
                        {
                            Id = 3,
                            DecayPrecent = 89.090000000000003,
                            Hour = 1.0
                        },
                        new
                        {
                            Id = 4,
                            DecayPrecent = 84.090000000000003,
                            Hour = 1.5
                        },
                        new
                        {
                            Id = 5,
                            DecayPrecent = 79.370000000000005,
                            Hour = 2.0
                        },
                        new
                        {
                            Id = 6,
                            DecayPrecent = 74.920000000000002,
                            Hour = 2.5
                        },
                        new
                        {
                            Id = 7,
                            DecayPrecent = 70.709999999999994,
                            Hour = 3.0
                        },
                        new
                        {
                            Id = 8,
                            DecayPrecent = 66.739999999999995,
                            Hour = 3.5
                        },
                        new
                        {
                            Id = 9,
                            DecayPrecent = 63.0,
                            Hour = 4.0
                        },
                        new
                        {
                            Id = 10,
                            DecayPrecent = 59.460000000000001,
                            Hour = 4.5
                        },
                        new
                        {
                            Id = 11,
                            DecayPrecent = 56.119999999999997,
                            Hour = 5.0
                        },
                        new
                        {
                            Id = 12,
                            DecayPrecent = 52.969999999999999,
                            Hour = 5.5
                        },
                        new
                        {
                            Id = 13,
                            DecayPrecent = 50.0,
                            Hour = 6.0
                        },
                        new
                        {
                            Id = 14,
                            DecayPrecent = 47.189999999999998,
                            Hour = 6.5
                        },
                        new
                        {
                            Id = 15,
                            DecayPrecent = 44.539999999999999,
                            Hour = 7.0
                        },
                        new
                        {
                            Id = 16,
                            DecayPrecent = 42.039999999999999,
                            Hour = 7.5
                        },
                        new
                        {
                            Id = 17,
                            DecayPrecent = 36.689999999999998,
                            Hour = 8.0
                        },
                        new
                        {
                            Id = 18,
                            DecayPrecent = 37.460000000000001,
                            Hour = 8.5
                        },
                        new
                        {
                            Id = 19,
                            DecayPrecent = 35.359999999999999,
                            Hour = 9.0
                        },
                        new
                        {
                            Id = 20,
                            DecayPrecent = 33.369999999999997,
                            Hour = 9.5
                        },
                        new
                        {
                            Id = 21,
                            DecayPrecent = 31.5,
                            Hour = 10.0
                        },
                        new
                        {
                            Id = 22,
                            DecayPrecent = 29.73,
                            Hour = 10.5
                        },
                        new
                        {
                            Id = 23,
                            DecayPrecent = 28.059999999999999,
                            Hour = 11.0
                        },
                        new
                        {
                            Id = 24,
                            DecayPrecent = 26.489999999999998,
                            Hour = 11.5
                        },
                        new
                        {
                            Id = 25,
                            DecayPrecent = 25.0,
                            Hour = 12.0
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Administrator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Administrator = true,
                            HashPassword = "f8EKu7SwpqildWZB1vPfjADyYop71xwTWF+4FVSBfv5YTW5gtIqKAvz8aY26TFXL3w==",
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Administrator = false,
                            HashPassword = "SAGSo68FqZ+Cr6EIn7eHqgC61MU7NCYMa3UhPw2R3iwvrKpgC23h7m/B9qgyRP/wRA==",
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.Volume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Volumes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Value = 8.0
                        },
                        new
                        {
                            Id = 3,
                            Value = 5.0
                        },
                        new
                        {
                            Id = 4,
                            Value = 4.0
                        },
                        new
                        {
                            Id = 5,
                            Value = 3.0
                        },
                        new
                        {
                            Id = 6,
                            Value = 2.0
                        },
                        new
                        {
                            Id = 7,
                            Value = 1.5
                        },
                        new
                        {
                            Id = 8,
                            Value = 1.3999999999999999
                        },
                        new
                        {
                            Id = 9,
                            Value = 1.3
                        },
                        new
                        {
                            Id = 10,
                            Value = 1.2
                        },
                        new
                        {
                            Id = 11,
                            Value = 1.1000000000000001
                        },
                        new
                        {
                            Id = 12,
                            Value = 1.0
                        },
                        new
                        {
                            Id = 13,
                            Value = 0.90000000000000002
                        },
                        new
                        {
                            Id = 14,
                            Value = 0.80000000000000004
                        },
                        new
                        {
                            Id = 15,
                            Value = 0.69999999999999996
                        },
                        new
                        {
                            Id = 16,
                            Value = 0.59999999999999998
                        },
                        new
                        {
                            Id = 17,
                            Value = 0.5
                        },
                        new
                        {
                            Id = 18,
                            Value = 0.40000000000000002
                        },
                        new
                        {
                            Id = 19,
                            Value = 0.29999999999999999
                        },
                        new
                        {
                            Id = 20,
                            Value = 0.20000000000000001
                        },
                        new
                        {
                            Id = 21,
                            Value = 0.10000000000000001
                        });
                });

            modelBuilder.Entity("Isotop2.Data.Entities.RI", b =>
                {
                    b.HasOne("Isotop2.Data.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Isotop2.Data.Entities.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Isotop2.Data.Entities.RadionuclideCompound", "RadionuclideCompound")
                        .WithMany()
                        .HasForeignKey("RadionuclideCompoundId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Isotop2.Data.Entities.Radionuclide", "Radionuclide")
                        .WithMany()
                        .HasForeignKey("RadionuclideId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Isotop2.Data.Entities.Recipient", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Isotop2.Data.Entities.StoragePoint", "StoragePoint")
                        .WithMany()
                        .HasForeignKey("StoragePointId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Isotop2.Data.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manufacturer");

                    b.Navigation("Package");

                    b.Navigation("Radionuclide");

                    b.Navigation("RadionuclideCompound");

                    b.Navigation("Recipient");

                    b.Navigation("StoragePoint");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Isotop2.Data.Entities.RadiationExposureToOrgan", b =>
                {
                    b.HasOne("Isotop2.Data.Entities.Marker", "Marker")
                        .WithMany()
                        .HasForeignKey("MarkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Isotop2.Data.Entities.Organ", "Organ")
                        .WithMany()
                        .HasForeignKey("OrganId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marker");

                    b.Navigation("Organ");
                });
#pragma warning restore 612, 618
        }
    }
}
